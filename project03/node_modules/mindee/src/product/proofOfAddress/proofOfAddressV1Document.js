"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProofOfAddressV1Document = void 0;
const common_1 = require("../../parsing/common");
const standard_1 = require("../../parsing/standard");
/**
 * Document data for Proof of Address, API version 1.
 */
class ProofOfAddressV1Document {
    constructor(rawPrediction, pageId) {
        /** List of dates found on the document. */
        this.dates = [];
        /** List of company registrations found for the issuer. */
        this.issuerCompanyRegistration = [];
        /** List of company registrations found for the recipient. */
        this.recipientCompanyRegistration = [];
        this.date = new standard_1.DateField({
            prediction: rawPrediction["date"],
            pageId: pageId,
        });
        rawPrediction["dates"] &&
            rawPrediction["dates"].map((itemPrediction) => this.dates.push(new standard_1.DateField({
                prediction: itemPrediction,
                pageId: pageId,
            })));
        this.issuerAddress = new standard_1.StringField({
            prediction: rawPrediction["issuer_address"],
            pageId: pageId,
        });
        rawPrediction["issuer_company_registration"] &&
            rawPrediction["issuer_company_registration"].map((itemPrediction) => this.issuerCompanyRegistration.push(new standard_1.CompanyRegistrationField({
                prediction: itemPrediction,
                pageId: pageId,
            })));
        this.issuerName = new standard_1.StringField({
            prediction: rawPrediction["issuer_name"],
            pageId: pageId,
        });
        this.locale = new standard_1.LocaleField({
            prediction: rawPrediction["locale"],
        });
        this.recipientAddress = new standard_1.StringField({
            prediction: rawPrediction["recipient_address"],
            pageId: pageId,
        });
        rawPrediction["recipient_company_registration"] &&
            rawPrediction["recipient_company_registration"].map((itemPrediction) => this.recipientCompanyRegistration.push(new standard_1.CompanyRegistrationField({
                prediction: itemPrediction,
                pageId: pageId,
            })));
        this.recipientName = new standard_1.StringField({
            prediction: rawPrediction["recipient_name"],
            pageId: pageId,
        });
    }
    /**
     * Default string representation.
     */
    toString() {
        const issuerCompanyRegistration = this.issuerCompanyRegistration.join("\n                              ");
        const recipientCompanyRegistration = this.recipientCompanyRegistration.join("\n                                 ");
        const dates = this.dates.join("\n        ");
        const outStr = `:Locale: ${this.locale}
:Issuer Name: ${this.issuerName}
:Issuer Company Registrations: ${issuerCompanyRegistration}
:Issuer Address: ${this.issuerAddress}
:Recipient Name: ${this.recipientName}
:Recipient Company Registrations: ${recipientCompanyRegistration}
:Recipient Address: ${this.recipientAddress}
:Dates: ${dates}
:Date of Issue: ${this.date}`.trimEnd();
        return (0, common_1.cleanOutString)(outStr);
    }
}
exports.ProofOfAddressV1Document = ProofOfAddressV1Document;
