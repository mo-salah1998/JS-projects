import { Prediction, StringDict } from "../../parsing/common";
import { ReceiptV5LineItem } from "./receiptV5LineItem";
import { AmountField, ClassificationField, CompanyRegistrationField, DateField, LocaleField, StringField, Taxes } from "../../parsing/standard";
/**
 * Document data for Receipt, API version 5.
 */
export declare class ReceiptV5Document implements Prediction {
    /** The purchase category among predefined classes. */
    category: ClassificationField;
    /** The date the purchase was made. */
    date: DateField;
    /** One of: 'CREDIT CARD RECEIPT', 'EXPENSE RECEIPT'. */
    documentType: ClassificationField;
    /** List of line item details. */
    lineItems: ReceiptV5LineItem[];
    /** The locale detected on the document. */
    locale: LocaleField;
    /** The purchase subcategory among predefined classes for transport and food. */
    subcategory: ClassificationField;
    /** The address of the supplier or merchant. */
    supplierAddress: StringField;
    /** List of company registrations associated to the supplier. */
    supplierCompanyRegistrations: CompanyRegistrationField[];
    /** The name of the supplier or merchant. */
    supplierName: StringField;
    /** The phone number of the supplier or merchant. */
    supplierPhoneNumber: StringField;
    /** List of tax lines information. */
    taxes: Taxes;
    /** The time the purchase was made. */
    time: StringField;
    /** The total amount of tip and gratuity. */
    tip: AmountField;
    /** The total amount paid: includes taxes, discounts, fees, tips, and gratuity. */
    totalAmount: AmountField;
    /** The net amount paid: does not include taxes, fees, and discounts. */
    totalNet: AmountField;
    /** The total amount of taxes. */
    totalTax: AmountField;
    constructor(rawPrediction: StringDict, pageId?: number);
    /**
     * Default string representation.
     */
    toString(): string;
}
