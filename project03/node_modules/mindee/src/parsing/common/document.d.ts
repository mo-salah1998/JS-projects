import { Extras } from "./extras/extras";
import { Inference } from "./inference";
import { Ocr } from "./ocr";
import { StringDict } from "./stringDict";
/**
 * Document prediction wrapper class. Holds the results of a parsed document.
 * @typeParam T an extension of an `Inference`. Mandatory in order to properly create an inference.
 */
export declare class Document<T extends Inference> {
    /** File name as sent back by the server. */
    filename: string;
    /** Result of the base inference. */
    inference: T;
    /** Id of the document as sent back by the server. */
    id: string;
    /** Potential `Extras` fields sent back along the prediction. */
    extras?: Extras;
    /** Raw-text response for `allWords` parsing. */
    ocr?: Ocr;
    /**
     *
     * @param inferenceClass constructor signature for an inference.
     * @param httpResponse raw http response.
     */
    constructor(inferenceClass: new (httpResponse: StringDict) => T, httpResponse: StringDict);
    /**
     * Default string representation.
     */
    toString(): string;
}
